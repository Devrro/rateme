{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/compoenents/header/header.component.ts","./src/app/compoenents/header/header.component.html","./src/app/compoenents/home/home.component.ts","./src/app/compoenents/home/home.component.html","./src/app/compoenents/login/login.component.ts","./src/app/compoenents/login/login.component.html","./src/app/compoenents/profile/profile.component.ts","./src/app/compoenents/profile/profile.component.html","./src/app/compoenents/profile/qr-codes-page/qr-code-form/qr-code-form.component.ts","./src/app/compoenents/profile/qr-codes-page/qr-code-form/qr-code-form.component.html","./src/app/compoenents/profile/qr-codes-page/qr-codes-page.component.ts","./src/app/compoenents/profile/qr-codes-page/qr-codes-page.component.html","./src/app/compoenents/profile/qr-reviews-page/qr-reviews-page.component.ts","./src/app/compoenents/profile/qr-reviews-page/qr-reviews-page.component.html","./src/app/compoenents/profile/telegram-info/telegram-info.component.ts","./src/app/compoenents/profile/telegram-info/telegram-info.component.html","./src/app/compoenents/profile/user-profile/user-profile.component.ts","./src/app/compoenents/profile/user-profile/user-profile.component.html","./src/app/compoenents/redirect-pages/redirect-pages.component.ts","./src/app/compoenents/redirect-pages/redirect-pages.component.html","./src/app/compoenents/redirect-pages/redirect404/redirect404.component.ts","./src/app/compoenents/redirect-pages/redirect404/redirect404.component.html","./src/app/compoenents/review-qr-form/review-qr-form.component.ts","./src/app/compoenents/review-qr-form/review-qr-form.component.html","./src/app/compoenents/signup/profile-activate/profile-activate.component.ts","./src/app/compoenents/signup/profile-activate/profile-activated/profile-activated.component.ts","./src/app/compoenents/signup/profile-activate/profile-activated/profile-activated.component.html","./src/app/compoenents/signup/signup.component.ts","./src/app/compoenents/signup/signup.component.html","./src/constants/regEx.constants.ts","./src/constants/url.constants.ts","./src/environments/environment.ts","./src/main.ts","./src/services/auth.service.ts","./src/services/guards/user.guard.ts","./src/services/interceptors/auth.interceptor.ts","./src/services/public-place.service.ts","./src/services/reviews.service.ts","./src/services/user.service.ts"],"sourcesContent":["import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {LoginComponent} from \"./compoenents/login/login.component\";\r\nimport {SignupComponent} from \"./compoenents/signup/signup.component\";\r\nimport {HomeComponent} from \"./compoenents/home/home.component\";\r\nimport {ProfileComponent} from \"./compoenents/profile/profile.component\";\r\nimport {UserProfileComponent} from \"./compoenents/profile/user-profile/user-profile.component\";\r\nimport {QrCodesPageComponent} from \"./compoenents/profile/qr-codes-page/qr-codes-page.component\";\r\nimport {QrReviewsPageComponent} from \"./compoenents/profile/qr-reviews-page/qr-reviews-page.component\";\r\nimport {QrCodeFormComponent} from \"./compoenents/profile/qr-codes-page/qr-code-form/qr-code-form.component\";\r\nimport {ReviewQrFormComponent} from \"./compoenents/review-qr-form/review-qr-form.component\";\r\nimport {UserGuard} from \"../services/guards/user.guard\";\r\nimport {TelegramInfoComponent} from \"./compoenents/profile/telegram-info/telegram-info.component\";\r\nimport {ProfileActivateComponent} from \"./compoenents/signup/profile-activate/profile-activate.component\";\r\nimport {\r\n  ProfileActivatedComponent\r\n} from \"./compoenents/signup/profile-activate/profile-activated/profile-activated.component\";\r\nimport {Redirect404Component} from \"./compoenents/redirect-pages/redirect404/redirect404.component\";\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: HomeComponent},\r\n  {path: 'signin', component: LoginComponent},\r\n  {path: 'signup', component: SignupComponent},\r\n  {path: 'activate/:token', component: ProfileActivateComponent},\r\n  {path: 'user_is_activated', component: ProfileActivatedComponent},\r\n  {\r\n    path: 'profile', component: ProfileComponent, canActivate: [UserGuard],\r\n    children: [\r\n      {path: 'info', component: UserProfileComponent},\r\n      {\r\n        path: 'qr_codes', component: QrCodesPageComponent, children: [\r\n          {path: 'qr_create', component: QrCodeFormComponent}\r\n        ]\r\n      },\r\n      {path: 'qr_reviews', component: QrReviewsPageComponent},\r\n      {path: 'telegram_info', component: TelegramInfoComponent},\r\n    ]\r\n  },\r\n  {path: 'rate_place/:id', component: ReviewQrFormComponent},\r\n  {path: 'error',component:Redirect404Component},\r\n  {path: '**', redirectTo: 'error'}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'rateme';\r\n}\r\n","<app-header></app-header>\r\n<router-outlet></router-outlet>\r\n","import {NgModule} from '@angular/core';\r\nimport {BrowserModule} from '@angular/platform-browser';\r\n\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AppComponent} from './app.component';\r\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\r\nimport {HttpClientModule} from \"@angular/common/http\";\r\nimport {AuthServiceProvider} from \"../services/interceptors/auth.interceptor\";\r\nimport {HeaderComponent} from './compoenents/header/header.component';\r\nimport {LoginComponent} from './compoenents/login/login.component';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\nimport {MdbAccordionModule} from 'mdb-angular-ui-kit/accordion';\r\nimport {MdbCarouselModule} from 'mdb-angular-ui-kit/carousel';\r\nimport {MdbCheckboxModule} from 'mdb-angular-ui-kit/checkbox';\r\nimport {MdbCollapseModule} from 'mdb-angular-ui-kit/collapse';\r\nimport {MdbDropdownModule} from 'mdb-angular-ui-kit/dropdown';\r\nimport {MdbFormsModule} from 'mdb-angular-ui-kit/forms';\r\nimport {MdbModalModule} from 'mdb-angular-ui-kit/modal';\r\nimport {MdbPopoverModule} from 'mdb-angular-ui-kit/popover';\r\nimport {MdbRadioModule} from 'mdb-angular-ui-kit/radio';\r\nimport {MdbRangeModule} from 'mdb-angular-ui-kit/range';\r\nimport {MdbRippleModule} from 'mdb-angular-ui-kit/ripple';\r\nimport {MdbScrollspyModule} from 'mdb-angular-ui-kit/scrollspy';\r\nimport {MdbTabsModule} from 'mdb-angular-ui-kit/tabs';\r\nimport {MdbTooltipModule} from 'mdb-angular-ui-kit/tooltip';\r\nimport {MdbValidationModule} from 'mdb-angular-ui-kit/validation';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {SignupComponent} from './compoenents/signup/signup.component';\r\nimport {HomeComponent} from './compoenents/home/home.component';\r\nimport {ProfileComponent} from './compoenents/profile/profile.component';\r\nimport {UserProfileComponent} from './compoenents/profile/user-profile/user-profile.component';\r\nimport {QrCodesPageComponent} from './compoenents/profile/qr-codes-page/qr-codes-page.component';\r\nimport {QrReviewsPageComponent} from './compoenents/profile/qr-reviews-page/qr-reviews-page.component';\r\nimport {QrCodeFormComponent} from './compoenents/profile/qr-codes-page/qr-code-form/qr-code-form.component';\r\nimport {ReviewQrFormComponent} from './compoenents/review-qr-form/review-qr-form.component';\r\nimport {MatSelectModule} from \"@angular/material/select\";\r\nimport {MatPaginatorModule} from \"@angular/material/paginator\";\r\nimport { TelegramInfoComponent } from './compoenents/profile/telegram-info/telegram-info.component';\r\nimport { ProfileActivateComponent } from './compoenents/signup/profile-activate/profile-activate.component';\r\nimport { ProfileActivatedComponent } from './compoenents/signup/profile-activate/profile-activated/profile-activated.component';\r\nimport { RedirectPagesComponent } from './compoenents/redirect-pages/redirect-pages.component';\r\nimport { Redirect404Component } from './compoenents/redirect-pages/redirect404/redirect404.component';\r\nimport {MatSliderModule} from \"@angular/material/slider\";\r\n\r\n\r\nconst mdbModules = [\r\n  MdbAccordionModule,\r\n  MdbCarouselModule,\r\n  MdbCheckboxModule,\r\n  MdbCollapseModule,\r\n  MdbDropdownModule,\r\n  MdbFormsModule,\r\n  MdbModalModule,\r\n  MdbPopoverModule,\r\n  MdbRadioModule,\r\n  MdbRangeModule,\r\n  MdbRippleModule,\r\n  MdbScrollspyModule,\r\n  MdbTabsModule,\r\n  MdbTooltipModule,\r\n  MdbValidationModule,\r\n]\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    LoginComponent,\r\n    SignupComponent,\r\n    HomeComponent,\r\n    ProfileComponent,\r\n    UserProfileComponent,\r\n    QrCodesPageComponent,\r\n    QrReviewsPageComponent,\r\n    QrCodeFormComponent,\r\n    ReviewQrFormComponent,\r\n    TelegramInfoComponent,\r\n    ProfileActivateComponent,\r\n    ProfileActivatedComponent,\r\n    RedirectPagesComponent,\r\n    Redirect404Component,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    NgbModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    BrowserAnimationsModule,\r\n    MatSelectModule,\r\n    // SharedModule\r\n    ...mdbModules,\r\n    MatPaginatorModule,\r\n    MatSliderModule,\r\n  ],\r\n  providers: [AuthServiceProvider],\r\n  bootstrap: [AppComponent]\r\n\r\n})\r\nexport class AppModule {\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AuthService} from \"../../../services/auth.service\";\r\nimport {IUserModelInfo} from \"../../../models/IUser\";\r\nimport {MdbModalService} from \"mdb-angular-ui-kit/modal\";\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  isLoggedIn = false\r\n  username?:string;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.authService.getAccessToken()) {\r\n      this.authService.UserIsLogged.next(true)\r\n    } else {\r\n      this.authService.UserIsLogged.next(false)\r\n    }\r\n    this.authService.UserIsLogged.subscribe({\r\n      next: (value) => {\r\n        this.isLoggedIn = value\r\n        if (value) {\r\n          let user: IUserModelInfo | void = this.authService.getUser();\r\n          if (user) {\r\n            if (\"profile\" in user) {\r\n              this.username = user.profile.first_name\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  logOut() {\r\n    this.authService.UserIsLogged.next(false)\r\n    this.isLoggedIn = false\r\n    this.authService.signOut()\r\n    // window.location.reload()\r\n  }\r\n\r\n}\r\n","<header class=\"header\">\r\n  <nav class=\"navbar navbar-expand-lg navbar-light\" style=\"padding-left: 20px;padding-right: 20px\">\r\n    <a class=\"navbar-brand\" href=\"#\">RateMeQR</a>\r\n    <div class=\"collapse navbar-collapse justify-content-end \" id=\"navbarSupportedContent\">\r\n      <ul class=\"navbar-nav ml-auto topnav d-flex gap-2\">\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link\" href=\"#\">Home <span class=\"sr-only\">(current)</span></a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"#\">About</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" [routerLink]=\"['contact']\">Contact</a>\r\n        </li>\r\n        <li class=\"nav-item pl-2 \" *ngIf=\"!isLoggedIn\">\r\n          <a [routerLink]=\"['signin']\" class=\"nav-link btn btn-primary text-white\" type=\"button\" href=\"#\" data-toggle=\"modal\"\r\n             data-target=\"#myModal\">Sign In</a>\r\n        </li>\r\n        <li class=\"nav-item pl-2\" *ngIf=\"!isLoggedIn\">\r\n          <a [routerLink]=\"['signup']\" class=\"nav-link btn btn-danger text-white\" type=\"button\" href=\"#\" data-toggle=\"modal\"\r\n             data-target=\"#myModal\">Register</a>\r\n        </li>\r\n        <li class=\"nav-item \"  *ngIf=\"isLoggedIn\">\r\n          <a class=\"nav-link\" [routerLink]=\"['profile', 'info']\">My profile</a>\r\n        </li>\r\n        <li class=\"nav-item \"  *ngIf=\"isLoggedIn\">\r\n          <a href class=\"nav-link\" (click)=\"logOut()\">Log out</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n  </nav>\r\n</header>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid bg-white\" style=\"padding: 0\">\r\n  <div class=\"row background-main\" style=\"background-color: var(--light_sea_green); overflow: hidden\">\r\n    <div\r\n      class=\"col-12 d-flex background-main text-white align-items-center justify-content-center \">\r\n      <h1 style=\"margin:  20vh; z-index: 2\">Welcome to my\r\n        <span style=\"color: var(--yellow_munsell)\">\r\n          QR\r\n        </span>\r\n        Reviews study app!\r\n      </h1>\r\n    </div>\r\n  </div>\r\n  <div class=\"row expand-row\">\r\n    <div class=\"col d-flex justify-content-start align-items-center flex-column\" #contact style=\"height: 50vh\">\r\n      <div class=\"my-4\"><h2 class=\"my-3 text-uppercase text-light-sea-green text-decor-wide\">Author</h2></div>\r\n      <div class=\"card d-flex flex-row justify-content-center align-items-center gap-3\" style=\"height: 30vh\">\r\n        <div class=\"contact-info d-flex justify-content-end\" style=\"width: 30vw;\">\r\n          <ul class=\"d-flex flex-column gap-3 margin-right\" style=\"margin: 0;padding: 0\">\r\n            <li class=\"  d-flex justify-content-end align-items-center\">\r\n              <span class=\"text-uppercase\">Ukraine, Lviv</span>\r\n            </li>\r\n            <li class=\"  d-flex justify-content-end align-items-center\">\r\n              <span class=\"text-uppercase\">+380977551373</span>\r\n            </li>\r\n            <li class=\"  d-flex justify-content-end align-items-center\">\r\n              <span class=\"text-uppercase\">serhii.terletskiy.ua@gmail.com</span>\r\n            </li>\r\n          </ul>\r\n          <ul class=\"d-flex flex-column gap-3 margin-right\" style=\"margin: 0;padding: 0\">\r\n            <li class=\"list-inline-item \"><i class=\"fa-solid fa-location-dot\"></i></li>\r\n            <li class=\"list-inline-item \"><i class=\"fa-solid fa-phone\"></i></li>\r\n            <li class=\"list-inline-item \"><i class=\"fa-solid fa-inbox\"></i></li>\r\n          </ul>\r\n        </div>\r\n\r\n        <div class=\"d-flex flex-row align-items-center h-100\" style=\"width: 30vw; z-index: 1\">\r\n          <div style=\"width: 0; height: 0;z-index: 2\">\r\n            <div class=\"cut-shadow\"></div>\r\n          </div>\r\n          <div style=\"z-index: 3; height: 100%\"\r\n               class=\"profile-block d-flex bg-white align-items-center justify-content-center\">\r\n            <div style=\"margin-right: 1rem;margin-left: 1rem\">\r\n              <h5 class=\"my-1\"><span class=\"text-uppercase fw-bold text-tangerine\">Serhii</span> Terletskiy</h5>\r\n              <h6 class=\"my-1\">Junior FullStack developer</h6>\r\n              <hr>\r\n            </div>\r\n            <div style=\"width: 150px;border-radius: 100%;overflow: hidden\">\r\n              <img style=\"width: 150px;\" src=\"./assets/img/portrait.jpg\" alt=\"My profiles photo\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!--  <div class=\"row\">-->\r\n  <!--    <div class=\"col\">-->\r\n  <!--      <div class=footer>-->\r\n  <!--        <div class=\"row d-flex align-items-center justify-content-center gap-5\">-->\r\n  <!--          <div class=\"col-3 bg-black\">COL1</div>-->\r\n  <!--          <div class=\"col-3  bg-black\">COL2</div>-->\r\n  <!--          <div class=\"col-3  bg-black\">COL3</div>-->\r\n  <!--        </div>-->\r\n  <!--      </div>-->\r\n  <!--    </div>-->\r\n  <!--  </div>-->\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AuthService} from \"../../../services/auth.service\";\r\nimport {UserService} from \"../../../services/user.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {IUserModelInfo} from \"../../../models/IUser\";\r\nimport {FormControl, FormGroup} from \"@angular/forms\";\r\nimport {catchError, debounceTime, tap, throwError} from \"rxjs\";\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  formLogin: FormGroup = new FormGroup({\r\n    login: new FormControl('antit4'),\r\n    password: new FormControl('12345678')\r\n  })\r\n  isLoggedIn = false;\r\n  isLoginFailed = false;\r\n  errMsg = ''\r\n  user: IUserModelInfo;\r\n  roles: string[] = [];\r\n\r\n\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private userService: UserService,\r\n    private router: Router\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.authService.UserIsLogged.subscribe({next: value => this.isLoggedIn = value})\r\n    if (this.authService.getAccessToken()) {\r\n      const user = this.authService.getUser()\r\n      if (user) {\r\n        this.user = user\r\n      }\r\n      this.authService.UserIsLogged.next(true)\r\n    } else {\r\n      this.authService.UserIsLogged.next(false)\r\n    }\r\n  }\r\n\r\n  onSubmit(): void {\r\n    let {login, password} = this.formLogin.value\r\n    login = login.toLowerCase()\r\n    this.authService.login(login, password).subscribe(\r\n      {\r\n        next: (value) => {\r\n          this.authService.SaveTokens(value)\r\n          this.isLoginFailed = false\r\n          this.isLoggedIn = true\r\n\r\n          this.userService.getMeUser().pipe().subscribe({\r\n            next: (value) => {\r\n              let user = value.data[0]\r\n              this.authService.saveUser(user)\r\n              this.user = user\r\n              this.authService.UserIsLogged.next(true)\r\n              this.router.navigate(['/profile', 'info'])\r\n            },\r\n            error: (err) => {\r\n              this.authService.UserIsLogged.next(false)\r\n              console.log(err)\r\n              this.errMsg = err.error.detail;\r\n              this.isLoginFailed = true\r\n            }\r\n          })\r\n        },\r\n        error: (err) => {\r\n          this.errMsg = err.error.detail;\r\n          this.isLoginFailed = true\r\n        },\r\n      }\r\n    )\r\n\r\n  }\r\n}\r\n","<div class=\"col-md-12\" style=\"margin-top: 30vh\">\r\n  <div class=\"card-container\">\r\n    <form\r\n      class=\"px-2 py-2 d-flex flex-column align-items-center\"\r\n      *ngIf=\"!isLoggedIn\"\r\n      name=\"form\"\r\n      (ngSubmit)=\"formLogin.valid && onSubmit()\"\r\n      #f=\"ngForm\"\r\n      novalidate\r\n      [formGroup]=\"formLogin\"\r\n    >\r\n      <div class=\"row mb-2\">\r\n        <div class=\"col form-group\">\r\n          <label for=\"login\">Login</label>\r\n          <input\r\n            id=\"login\"\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            name=\"username\"\r\n            formControlName=\"login\"\r\n            required\r\n          />\r\n        </div>\r\n        <!--        <div-->\r\n        <!--          class=\"alert alert-danger\"-->\r\n        <!--          role=\"alert\"-->\r\n        <!--          *ngIf=\"username.errors && f.submitted\"-->\r\n        <!--        >-->\r\n        <!--          Username is required!-->\r\n        <!--        </div>-->\r\n      </div>\r\n      <div class=\"row mb-2 \">\r\n        <div class=\"col form-group\">\r\n          <label for=\"password\">Password</label>\r\n          <input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            class=\"form-control\"\r\n            name=\"password\"\r\n            formControlName=\"password\"\r\n            required\r\n            minlength=\"4\"\r\n          />\r\n        </div>\r\n        <!--        <div-->\r\n        <!--          class=\"alert alert-danger\"-->\r\n        <!--          role=\"alert\"-->\r\n        <!--          *ngIf=\"password.errors && f.submitted\"-->\r\n        <!--        >-->\r\n        <!--          <div *ngIf=\"password.errors.required\">Password is required</div>-->\r\n        <!--          <div *ngIf=\"password.errors.minlength\">-->\r\n        <!--            Password must be at least 6 characters-->\r\n        <!--          </div>-->\r\n        <!--        </div>-->\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <button class=\"btn btn-primary btn-block mb-5\">\r\n          Sign in\r\n        </button>\r\n      </div>\r\n            <div class=\"form-group\">\r\n              <div\r\n                class=\"alert alert-danger\"\r\n                role=\"alert\"\r\n                *ngIf=\"f.submitted && isLoginFailed\"\r\n              >\r\n                {{ errMsg }}\r\n              </div>\r\n            </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {AuthService} from \"../../../services/auth.service\";\r\nimport {UserService} from \"../../../services/user.service\";\r\nimport {IUserModelInfo} from \"../../../models/IUser\";\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  currentUser: IUserModelInfo;\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private authService: AuthService,\r\n  ) {\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n\r\n    const user = this.authService.getUser()\r\n\r\n    if (user) {\r\n      this.currentUser = user\r\n    } else {\r\n      this.getUser()\r\n    }\r\n  }\r\n\r\n\r\n  getUser(): void {\r\n    this.userService.getMeUser().subscribe({\r\n      next: (value) => {\r\n        const user: IUserModelInfo = value.data[0]\r\n        this.currentUser = user\r\n        this.authService.saveUser(user)\r\n      },\r\n      error: (value) => {\r\n        console.log('Profile model error')\r\n      }\r\n    })\r\n  }\r\n}\r\n","<div class=\"container\" style=\"margin-top: 120px;margin-bottom: 120px\">\r\n  <div class=\"row\">\r\n    <div class=\"col-3 \">\r\n      <div class=\"list-group mb-2\">\r\n        <a [routerLink]=\"['info']\"\r\n          [routerLinkActive]=\"['active',]\"\r\n           class=\"list-group-item list-group-item-action\">\r\n          My account</a>\r\n        <a\r\n          [routerLink]=\"['qr_codes']\"\r\n          [routerLinkActive]=\"['active',]\"\r\n          class=\"list-group-item list-group-item-action \">\r\n          QR codes managements\r\n        </a>\r\n        <a\r\n          [routerLink]=\"['telegram_info']\"\r\n          [routerLinkActive]=\"['active',]\"\r\n          class=\"list-group-item list-group-item-action \">\r\n          Telegram connection\r\n        </a>\r\n<!--        <a-->\r\n<!--          [routerLink]=\"['qr_reviews']\"-->\r\n<!--          [routerLinkActive]=\"['active',]\"-->\r\n<!--          class=\"list-group-item list-group-item-action\">-->\r\n<!--          QR Reviews-->\r\n<!--        </a>-->\r\n\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-9\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\r\nimport {FormControl, FormGroup} from \"@angular/forms\";\r\nimport {PublicPlaceService} from \"../../../../../services/public-place.service\";\r\nimport {PublicPlace} from \"../../../../../models/IPublic_place\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-qr-code-form',\r\n  templateUrl: './qr-code-form.component.html',\r\n  styleUrls: ['./qr-code-form.component.scss']\r\n})\r\nexport class QrCodeFormComponent implements OnInit {\r\n  _PlaceGroup: FormGroup\r\n\r\n  @Output()\r\n  addQrEvent = new EventEmitter<PublicPlace>()\r\n\r\n  constructor(\r\n    private placeService: PublicPlaceService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createPlaceForm()\r\n  }\r\n\r\n  createPlaceForm(): void {\r\n    this._PlaceGroup = new FormGroup({\r\n      name: new FormControl(),\r\n      address: new FormGroup({\r\n        country: new FormControl(),\r\n        city: new FormControl(),\r\n        street: new FormControl(),\r\n        street_number: new FormControl(),\r\n      })\r\n    })\r\n  }\r\n\r\n  _SubmitPlace() {\r\n    this.placeService.createPlace(this._PlaceGroup.value).subscribe({\r\n      next: (value) => {\r\n        this.addQrEvent.emit(value)\r\n      }\r\n    })\r\n  }\r\n}\r\n","<form class=\"form-group\" (ngSubmit)=\"_SubmitPlace()\" [formGroup]=\"_PlaceGroup\">\r\n  <div class=\"col\">\r\n    <div class=\"row\">\r\n      <label for=\"name\">Name of your place</label>\r\n      <input class=\"form-control\" required  id=\"name\" name=\"name\" formControlName=\"name\">\r\n    </div>\r\n    <div formGroupName=\"address\" class=\"row mb-2\">\r\n      <label for=\"country\">Country</label>\r\n<!--      <input class=\"form-control\" required id=\"country\" name=\"name\" formControlName=\"country\">-->\r\n      <div class=\"form-control\" style=\"color: black\">\r\n          <mat-select\r\n            id=\"country\"\r\n            placeholder=\"Country\"\r\n            formControlName=\"country\">\r\n            <mat-option style=\"color: black;background-color: white\" [value]=\"'UA'\">\r\n              <span>Ukraine</span>\r\n            </mat-option>\r\n          </mat-select>\r\n      </div>\r\n      <label for=\"city\">City</label>\r\n      <input class=\"form-control\" required  id=\"city\" name=\"city\" formControlName=\"city\">\r\n      <label for=\"street\">Street</label>\r\n      <input class=\"form-control\"  required id=\"street\" name=\"street\" formControlName=\"street\">\r\n      <label for=\"street_number\">Street number</label>\r\n      <input class=\"form-control\" required  id=\"street_number\" name=\"street_number\" formControlName=\"street_number\">\r\n    </div>\r\n  </div>\r\n  <button class=\"btn btn-primary\" [disabled]=\"!_PlaceGroup.valid\" type=\"submit\">Create place</button>\r\n</form>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {PublicPlace} from \"../../../../models/IPublic_place\";\r\nimport {PublicPlaceService} from \"../../../../services/public-place.service\";\r\nimport {MdbModalRef, MdbModalService} from \"mdb-angular-ui-kit/modal\";\r\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\r\nimport {QrReviewsPageComponent} from \"../qr-reviews-page/qr-reviews-page.component\";\r\n\r\n@Component({\r\n  selector: 'app-qr-codes-page',\r\n  templateUrl: './qr-codes-page.component.html',\r\n  styleUrls: ['./qr-codes-page.component.scss']\r\n})\r\nexport class QrCodesPageComponent implements OnInit {\r\n\r\n  _msg: string = ''\r\n  _qrDeleteId = ''\r\n  _createQr: boolean = false;\r\n  _qrs: PublicPlace[]\r\n  params: Object = {\r\n    page_size: 40\r\n  }\r\n\r\n  constructor(\r\n    private publicPlaceService: PublicPlaceService,\r\n    private modalService: NgbModal\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._getUsersPublicPlaces()\r\n  }\r\n\r\n  _getUsersPublicPlaces() {\r\n    this.publicPlaceService.getMyPlaces(this.params).subscribe({\r\n      next: value => {\r\n        this._qrs = value.data\r\n      }\r\n    })\r\n  }\r\n\r\n  _createQrMode(): void {\r\n    this._createQr = !this._createQr\r\n  }\r\n\r\n\r\n  _addQr($event: PublicPlace) {\r\n    if (!this._qrs) {\r\n      this._qrs = []\r\n    }\r\n    this._qrs.unshift($event)\r\n    if (this._qrs.length >= 10) {\r\n      this._qrs.pop()\r\n    }\r\n  }\r\n\r\n  _getReviewsModalOpenXl(place_id: string) {\r\n    const reviewModalRef = this.modalService.open(QrReviewsPageComponent, {size: 'xl'})\r\n    reviewModalRef.componentInstance.place_id = place_id\r\n  }\r\n\r\n  _deletePlaceModal(content: any, id: string, msg: string = 'Are sure want to delete place?') {\r\n    this.modalService.open(content)\r\n    this._msg = msg\r\n    this._qrDeleteId = id\r\n  }\r\n\r\n  _deletePlace(modal: any,) {\r\n    this.publicPlaceService.deletePlace(this._qrDeleteId).subscribe(\r\n      {\r\n        next: value => {\r\n          this._qrs = this._qrs.filter(obj => obj.id != this._qrDeleteId)\r\n        }\r\n      }\r\n    )\r\n    modal.close()\r\n  }\r\n\r\n  _saveImg(src: string): void {\r\n    window.open(src)\r\n  }\r\n\r\n}\r\n","<div class=\"card mb-5\">\r\n  <div class=\"card-body\">\r\n    <div class=\"col\">\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <h4>Your places</h4>\r\n          <hr>\r\n          <button class=\"btn btn-primary\" (click)=\"_createQrMode()\">Create place</button>\r\n          <hr>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <div class=\"row d-flex justify-content-center\">\r\n            <div *ngIf=\"_createQr\" class=\"col-6\">\r\n              <app-qr-code-form (addQrEvent)=_addQr($event)></app-qr-code-form>\r\n            </div>\r\n          </div>\r\n          <hr *ngIf=\"_createQr\">\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col d-flex gap-2 flex-column\">\r\n          <div class=\"card flex-row px-3 py-3 azure_light_bg no_shadow\" *ngFor=\"let qr of _qrs\">\r\n            <div class=\"card-img hover-shadow host_picture overflow-hidden\"  style=\"width: 200px;height: 200px; border-radius: 25px;\">\r\n              <div (click)=\"_saveImg(qr.qr_data.qr_code)\">\r\n                <img class=\"\" style=\"width: 200px;\" [src]=\"qr.qr_data.qr_code\"\r\n                     [alt]=\"qr.qr_data.qr_url\">\r\n                <div class=\"save_me text-light\" style=\"width: 200px;height: 40px;\">\r\n                  <p>Click to save </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title\">\r\n                {{qr.name}}\r\n              </h5>\r\n              {{qr.created_at | date:'MMM d, y, HH:mm'}}\r\n              <div class=\"card-text\">\r\n                <div>{{qr.address.country}} {{qr.address.city}} {{qr.address.street}} {{qr.address.street_number}}</div>\r\n                <div class=\"text-capitalize\">ID : {{qr.id}}</div>\r\n              </div>\r\n            </div>\r\n            <div class=\"d-flex flex-column justify-content-between\">\r\n<!--              <button class=\"btn btn-primary\">Get info</button>-->\r\n              <button class=\"btn btn-secondary\" (click)=\"_getReviewsModalOpenXl(qr.id)\">Reviews</button>\r\n<!--              <button class=\"btn btn-danger\">#</button>-->\r\n<!--              <button (click)=\"_deletePlace(qr.id)\" class=\"btn btn-danger\">delete</button>-->\r\n              <button class=\"btn btn-sm btn-danger\" (click)=\"_deletePlaceModal(content, qr.id)\">Delete place</button>\r\n            </div>\r\n            <!--            <div></div>-->\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #content let-modal>\r\n\t<div class=\"modal-header\">\r\n\t\t<h4 class=\"modal-title\" id=\"modal-basic-title\">Delete place</h4>\r\n\t\t<button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\"></button>\r\n\t</div>\r\n\t<div class=\"modal-body\">\r\n    <div class=\"\">{{_msg}}</div>\r\n<!--\t\t<form>-->\r\n<!--\t\t\t<div class=\"mb-3\">-->\r\n<!--\t\t\t\t<label for=\"dateOfBirth\">Date of birth</label>-->\r\n<!--\t\t\t\t<div class=\"input-group\">-->\r\n<!--\t\t\t\t\t<input-->\r\n<!--\t\t\t\t\t\tid=\"dateOfBirth\"-->\r\n<!--\t\t\t\t\t\tclass=\"form-control\"-->\r\n<!--\t\t\t\t\t\tplaceholder=\"yyyy-mm-dd\"-->\r\n<!--\t\t\t\t\t\tname=\"dp\"-->\r\n<!--\t\t\t\t\t\tngbDatepicker-->\r\n<!--\t\t\t\t\t\t#dp=\"ngbDatepicker\"-->\r\n<!--\t\t\t\t\t/>-->\r\n<!--\t\t\t\t\t<button class=\"btn btn-outline-secondary bi bi-calendar3\" (click)=\"dp.toggle()\" type=\"button\"></button>-->\r\n<!--\t\t\t\t</div>-->\r\n<!--\t\t\t</div>-->\r\n<!--\t\t</form>-->\r\n\t</div>\r\n\t<div class=\"modal-footer\">\r\n\t\t<button type=\"button\" class=\"btn btn-danger\" (click)=\"_deletePlace(modal)\">Delete</button>\r\n\t\t<button type=\"button\" class=\"btn btn-primary\" (click)=\"modal.close()\">Close</button>\r\n\t</div>\r\n</ng-template>\r\n\r\n\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {NgbActiveModal} from \"@ng-bootstrap/ng-bootstrap\";\r\nimport {ReviewsService} from \"../../../../services/reviews.service\";\r\nimport {ReviewPlace} from \"../../../../models/IReviewPlace\";\r\nimport {PageEvent} from \"@angular/material/paginator\";\r\n\r\n@Component({\r\n  selector: 'app-qr-reviews-page',\r\n  templateUrl: './qr-reviews-page.component.html',\r\n  styleUrls: ['./qr-reviews-page.component.scss']\r\n})\r\nexport class QrReviewsPageComponent implements OnInit {\r\n\r\n  @Input()\r\n  place_id:string;\r\n\r\n  avg_score:string\r\n  reviews_list: ReviewPlace[];\r\n\r\n  err:string\r\n\r\n  _getReviewsParams = {\r\n    page: 1,\r\n    page_size: 10,\r\n    ordering:'-created_at'\r\n  }\r\n  _getAvgScoreParams: {}\r\n  _pageCount: number;\r\n\r\n  constructor(\r\n    public activeModal:NgbActiveModal,\r\n    private reviewsService:ReviewsService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this._getReviews(this._getReviewsParams)\r\n    this._getAvgScore(this._getAvgScoreParams)\r\n  }\r\n\r\n  _getReviews(params:{}):void{\r\n    this.reviewsService\r\n      .getReviews(this.place_id,params)\r\n      .subscribe({\r\n        next:value => {\r\n          this._pageCount = parseInt(value.count)\r\n          this.reviews_list = value.data\r\n        },\r\n        error: err => {\r\n          this.err = err.error.detail\r\n        }\r\n      })\r\n  }\r\n\r\n  _getAvgScore(params:{}):void{\r\n    this.reviewsService\r\n      .getAvgScoreReviews(this.place_id,params)\r\n      .subscribe({\r\n        next:value => {\r\n          this.avg_score = value.data.place_score__avg\r\n        }\r\n      })\r\n  }\r\n\r\n  handlePageEvent($event: PageEvent) {\r\n    this._getReviewsParams.page_size = $event.pageSize\r\n    this._getReviewsParams.page = $event.pageIndex + 1\r\n    this._getReviews(this._getReviewsParams)\r\n  }\r\n}\r\n","<div *ngIf=\"!err\" class=\"modal-header\">\r\n  <h4 class=\"modal-title\">Average: {{avg_score}}</h4>\r\n  <mat-paginator\r\n    class=\"border-5\"\r\n    style=\"overflow: hidden\"\r\n    aria-label=\"paginate_reviews\"\r\n    (page)=\"handlePageEvent($event)\"\r\n    [length]=\"_pageCount\"\r\n    [pageSizeOptions]=\"[5,10,25]\"\r\n    [pageSize]=\"10\"\r\n  >\r\n  </mat-paginator>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <div *ngIf=\"!err\">\r\n    <div *ngFor=\"let review of reviews_list\">\r\n      <div class=\"card mb-2 mt-2\">\r\n        <div class=\"card-body\">\r\n          <p *ngIf=\"review.customer_name\">\r\n            Customer name: {{review.customer_name}}\r\n          </p>\r\n          <p *ngIf=\"review.place_score\">\r\n            Customer rate: {{review.place_score}}\r\n          </p>\r\n          <p *ngIf=\"review.customer_phone_number\">\r\n            Phone number: {{review.customer_phone_number}}\r\n          </p>\r\n          <p *ngIf=\"review.customer_review\">\r\n            {{review.customer_review}}\r\n          </p>\r\n          <p>{{review.created_at | date:'MMM d, y, HH:mm'}}</p>\r\n          <small>Review id : {{review.id}}</small>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div *ngIf=\"err\">\r\n    <p class=\"card-text\">{{err}}</p>\r\n  </div>\r\n</div>\r\n<div class=\"modal-footer\">\r\n  <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"activeModal.close('Close click')\">Close</button>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\nimport {UserService} from \"../../../../services/user.service\";\n\n@Component({\n  selector: 'app-telegram-info',\n  templateUrl: './telegram-info.component.html',\n  styleUrls: ['./telegram-info.component.scss']\n})\nexport class TelegramInfoComponent implements OnInit {\n\n  telegramCode: string = ''\n  is_active: boolean\n  slider_value: number\n\n\n  constructor(\n    private userService: UserService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.userService.getUserTelegramKeyObject().subscribe(\n      {\n        next: value => {\n          this.telegramCode = value.data[0].token_key\n          this.is_active = value.data[0].is_active\n        }\n      }\n    )\n\n  }\n\n  _sliderIsActive() {\n    this.userService.getUserTelegramKeyObject().subscribe(\n      {\n        next: value => {\n          if (value.data[0].is_active) {\n            this.slider_value = 10\n          } else {\n            this.slider_value = 1\n          }\n        }\n      }\n    )\n  }\n\n  setValue($event: any) {\n    this.userService.getUserTelegramKeyObject().subscribe(\n      {\n        next: value => {\n          if (value.data[0].is_active) {\n            this.slider_value = 10\n          } else {\n            this.slider_value = 1\n          }\n        }\n      }\n    )\n  }\n}\n","<div class=\"card mb-5\">\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col justify-content-center align-items-center\">\n        <p style=\"text-align: center\">To connect your telegram send code to <a\n          style=\"text-decoration: none;color: #ccc5cc\" target=\"_blank\" href=\"https://t.me/RateMe_app_bot\">RateMeApp</a>\n          bot</p>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">Your telegram code: {{telegramCode}}</div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-2 \">\n          <div class=\"slide_container card px-2 py-2\">\n            <label for=\"telegram_range\">Activate</label>\n            <input type=\"range\" step=\"10\" [min]=\"0\" [max]=\"10\" value=\"0\" class=\"slider\" id=\"telegram_range\"\n            [(ngModel)]=\"slider_value\" (ngModelChange)=\"setValue($event)\"\n            >\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {IUserModelInfo} from \"../../../../models/IUser\";\r\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {UserService} from \"../../../../services/user.service\";\r\nimport {AuthService} from \"../../../../services/auth.service\";\r\nimport {regExList} from \"../../../../constants/regEx.constants\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-profile',\r\n  templateUrl: './user-profile.component.html',\r\n  styleUrls: ['./user-profile.component.scss']\r\n})\r\nexport class UserProfileComponent implements OnInit {\r\n\r\n  @Input()\r\n  currentUser: IUserModelInfo;\r\n\r\n  userForm: FormGroup;\r\n  usersAvatarForm: FormGroup;\r\n\r\n  _editAbout: boolean = false\r\n  _disableOnSubmit: boolean = true\r\n  _placeholderInfo: string = 'Minimum characters input'\r\n  _minChars: number = 10\r\n  avatar_error: string;\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private authService: AuthService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const user = this.authService.getUser()\r\n    if (user) {\r\n      this.currentUser = user\r\n      console.log(user)\r\n    } else {\r\n      this.getUser()\r\n    }\r\n    this._createUserForm()\r\n    this._createAvatarForm()\r\n  }\r\n\r\n  getUser(): void {\r\n    this.userService.getMeUser().subscribe({\r\n      next: (value) => {\r\n        const user: IUserModelInfo = value.data[0]\r\n        this.currentUser = user\r\n        this.authService.saveUser(user)\r\n      },\r\n      error: (value) => {\r\n        console.log('Profile model error')\r\n      }\r\n    })\r\n  }\r\n\r\n  _createUserForm(): void {\r\n    this.userForm = new FormGroup({\r\n      birth_date: new FormControl(``, [Validators.min(1), Validators.max(130)]),\r\n      phone_number: new FormControl(``, [Validators.pattern(regExList.ukrainian_phone_num)]),\r\n      first_name: new FormControl(``, [\r\n        Validators.maxLength(25), Validators.minLength(2)\r\n      ]),\r\n      last_name: new FormControl(``, [\r\n        Validators.maxLength(25), Validators.minLength(2)\r\n      ]),\r\n      about_user: new FormControl(``, [Validators.minLength(10), Validators.maxLength(5000)]),\r\n    })\r\n  }\r\n\r\n  private _createAvatarForm() {\r\n    this.usersAvatarForm = new FormGroup(\r\n      {\r\n        avatar: new FormControl(null, [])\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n\r\n    let newInfo = this.userForm.value\r\n\r\n    Object.keys(newInfo).forEach(key => {\r\n      if (newInfo[key] === '' || newInfo[key] === null) {\r\n        delete newInfo[key];\r\n      }\r\n    })\r\n    if (Object.keys(newInfo).length !== 0) {\r\n      this.userService.updateUserProfileByID(newInfo).subscribe({\r\n        next: (profile) => {\r\n          this.currentUser.profile = profile\r\n          this.authService.updateUser(profile)\r\n          this.userForm.reset(this.userForm.value)\r\n          this._editAbout = false\r\n        },\r\n        error: (err) => {\r\n          console.warn(err)\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  _uploadPicture(e: any) {\r\n    const file: File = e.target.files[0];\r\n\r\n\r\n    if (file) {\r\n      if (file.size >= 1000 * 1024) {\r\n      return\r\n      }\r\n      let data = new FormData()\r\n      data.append('avatar', file)\r\n      this.userService.addAvatarToUser(data).subscribe(\r\n        {\r\n          next: value => {\r\n            this.currentUser.profile.avatar = value.avatar\r\n            this.authService.updateUserAvatar(value.avatar)\r\n          }\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"card\">\r\n  <div class=\"card-body\">\r\n    <div class=\"row\">\r\n      <div class=\"col d-flex justify-content-between align-items-center\">\r\n        <h4>Your Profile</h4>\r\n\r\n\r\n        <div (click)=\"file_upload.click()\"\r\n             class=\"d-flex align-items-center justify-content-center host_picture overflow_hide mb-3\"\r\n             style=\"width: 200px;height: 200px;border-radius: 50%\">\r\n\r\n          <div class=\"picture_center\" *ngIf=\"currentUser.profile.avatar else profile_pic_placeholder\"\r\n               style=\"width: 0;height: 0\">\r\n            <div class=\"d-flex justify-content-center align-items-center\" style=\"width: 200px\">\r\n              <div><img style=\"object-fit: cover;width: 200px;height: 200px;\" [src]=\"currentUser.profile.avatar\" alt=\"user photo\"></div>\r\n            </div>\r\n            <div class=\"save_me\" style=\"width: 200px;height: 200px;border-radius: 50%\">\r\n              <div class=\"d-flex align-items-center justify-content-center gap-2 flex-column\">\r\n                <div>Max 2 mb</div>\r\n                <i style=\"font-size: 3rem\" class=\"fa-solid fa-camera no_select\"></i></div>\r\n            </div>\r\n          </div>\r\n          <form style=\"display: none\" [formGroup]=\"usersAvatarForm\">\r\n            <label for=\"profile_picture\">Upload to</label>\r\n            <input #file_upload formControlName=\"avatar\" (change)=\"_uploadPicture($event)\" name=\"profile_picture\"\r\n                   id=\"profile_picture\" type=\"file\" accept=\".jpg,.png,.svg\">\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <hr>\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n          <form [formGroup]=\"userForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"form-group row mb-2\">\r\n              <div class=\"col\">\r\n                <p class=\"col-4 col-form-label\"><span class=\"fw-bold\">Email - </span>{{currentUser.email}}</p>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group row mb-2\">\r\n              <div class=\"col\">\r\n                <p class=\"col-4 col-form-label\"><span class=\"fw-bold\">Login - </span>{{currentUser.login}}</p>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group row mb-2\">\r\n              <label for=\"name\" class=\"col-4 col-form-label\">{{currentUser.profile.first_name}}</label>\r\n              <div class=\"col-8\">\r\n                <input\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  placeholder=\"First Name\"\r\n                  class=\"form-control here\"\r\n                  formControlName=\"first_name\"\r\n                  type=\"text\">\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group row mb-2\">\r\n              <label for=\"lastname\" class=\"col-4 col-form-label\">{{currentUser.profile.last_name}}</label>\r\n              <div class=\"col-8\">\r\n                <input\r\n                  id=\"lastname\"\r\n                  name=\"lastname\"\r\n                  placeholder=\"Last Name\"\r\n                  class=\"form-control here\"\r\n                  type=\"text\"\r\n                  formControlName=\"last_name\"\r\n                >\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group row mb-2\">\r\n              <label for=\"lastname\" class=\"col-4 col-form-label\">Birth\r\n                date: {{currentUser.profile.birth_date }} </label>\r\n              <div class=\"col-8\">\r\n                <input\r\n                  id=\"birth_date\"\r\n                  name=\"birth_date\"\r\n                  placeholder=\"Birth date\"\r\n                  class=\"form-control here\"\r\n                  type=\"text\"\r\n                  formControlName=\"birth_date\"\r\n                >\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group row mb-2\">\r\n              <label for=\"phone_number\" class=\"col-4 col-form-label\">Phone\r\n                number: {{currentUser.profile.phone_number}}</label>\r\n              <div class=\"col-8\">\r\n                <input\r\n                  id=\"phone_number\"\r\n                  name=\"name\"\r\n                  placeholder=\"Phone number\"\r\n                  class=\"form-control here\"\r\n                  formControlName=\"phone_number\"\r\n                  type=\"text\">\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n              <div class=\"col-12\">\r\n                <button name=\"submit\" type=\"submit\" [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Update My\r\n                  Profile\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #profile_pic_placeholder>\r\n  <div class=\"picture_center\">\r\n    <div class=\"d-flex align-items-center justify-content-center mb-3\"\r\n         style=\"width: 150px;height: 150px;border-radius: 50%;overflow: hidden\">\r\n      <img style=\"object-fit: cover;width: 200px;height: 200px;\" src=\"./assets/img/profile_place_holder.jpg\"\r\n           alt=\"user photo placeholder\"></div>\r\n    <div class=\"save_me\" style=\"width: 200px;height: 200px;border-radius: 50%\">\r\n      <div class=\"d-flex align-items-center justify-content-center gap-2 flex-column\">\r\n        <div>Max 2 mb</div>\r\n        <i style=\"font-size: 3rem\" class=\"fa-solid fa-camera no_select\"></i></div>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-redirect-pages',\n  templateUrl: './redirect-pages.component.html',\n  styleUrls: ['./redirect-pages.component.sass']\n})\nexport class RedirectPagesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>redirect-pages works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-redirect404',\n  templateUrl: './redirect404.component.html',\n  styleUrls: ['./redirect404.component.sass']\n})\nexport class Redirect404Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container \">\n  <div class=\"col-12 align-items-center justify-content-center\" style=\"margin-top: 10rem\">\n    <div class=\"row\">\n      <h2 style=\"text-align: center\">Whoops! Something went wrong!</h2>\n    </div>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {ReviewsService} from \"../../../services/reviews.service\";\r\n\r\n@Component({\r\n  selector: 'app-review-qr-form',\r\n  templateUrl: './review-qr-form.component.html',\r\n  styleUrls: ['./review-qr-form.component.scss']\r\n})\r\nexport class ReviewQrFormComponent implements OnInit {\r\n\r\n  _reviewForm: FormGroup\r\n  _id: string = ''\r\n  _sendMsg: string;\r\n  _errMsg: any;\r\n  _currentRate = 5\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private reviewService: ReviewsService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._creteReviewFormGroup()\r\n    this.activatedRoute.params.subscribe(\r\n      {\r\n        next: value => {\r\n          this._id = value['id']\r\n        }\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  _creteReviewFormGroup(): void {\r\n    this._reviewForm = new FormGroup({\r\n      customer_phone_number: new FormControl(''),\r\n      customer_review: new FormControl(''),\r\n      customer_name: new FormControl(''),\r\n      place_score: new FormControl('', [Validators.required]),\r\n    })\r\n  }\r\n\r\n\r\n  _submitReview(id: string): void {\r\n    console.log(this._reviewForm.value)\r\n    this.reviewService.postReview(id, this._reviewForm.value).subscribe(\r\n      {\r\n        next:value => {\r\n          this._sendMsg = value.detail\r\n        },\r\n        error:err => {\r\n          console.log(err)\r\n          this._errMsg = err.message\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n  <div class=\"row d-flex align-items-center justify-content-center\" style=\"margin-top: 10rem\">\r\n\r\n    <div *ngIf=\"!_sendMsg else success\" class=\"col-3\">\r\n      <form class=\"form d-flex flex-column justify-content-center align-items-center gap-2\" [formGroup]=\"_reviewForm\" (ngSubmit)=\"_submitReview(_id)\">\r\n        <div class=\"form-group w-100\">\r\n          <label for=\"customer_phone_number\">\r\n            Customer phone number\r\n          </label>\r\n          <input class=\"form-control\" id=\"customer_phone_number\" name=\"customer_phone_number\"\r\n                 formControlName=\"customer_phone_number\">\r\n        </div>\r\n        <div class=\"form-group w-100\">\r\n          <label for=\"customer_name\">\r\n            Your name\r\n          </label>\r\n          <input class=\"form-control\" id=\"customer_name\" formControlName=\"customer_name\">\r\n        </div>\r\n\r\n        <div class=\"form-group w-100\">\r\n          <label for=\"customer_review\">\r\n            Customer review\r\n          </label>\r\n          <input class=\"form-control\" id=\"customer_review\" formControlName=\"customer_review\">\r\n        </div>\r\n        <div class=\"form-group w-100 d-flex justify-content-between align-items-center flex-column\">\r\n          <label for=\"place_score\">Place rate</label>\r\n<!--          <input class=\"form-control\" id=\"place_score\" formControlName=\"place_score\">-->\r\n          <ngb-rating\r\n            [max]=\"5\"\r\n            id=\"place_score\"\r\n            formControlName=\"place_score\"\r\n          >\r\n            <ng-template let-fill=\"fill\" let-index=\"index\">\r\n              <i class=\"bi-star{{fill === 100 ? '-fill' : ''}}\" [class.filled]=\"fill === 100\"\r\n              ></i>\r\n            </ng-template>\r\n          </ngb-rating>\r\n        </div>\r\n        <button class=\"btn btn-primary\" type=\"SUBMIT\">Send</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<ng-template #success>\r\n  <div class=\"col-3 d-flex align-items-center justify-content-center\">\r\n    <h6 class=\"text-success\" style=\"font-size: 40px\">{{_sendMsg}}</h6>\r\n  </div>\r\n</ng-template>\r\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {UserService} from \"../../../../services/user.service\";\n\n@Component({\n  selector: 'app-profile-activate',\n  templateUrl: './profile-activate.component.html',\n  styleUrls: ['./profile-activate.component.sass']\n})\nexport class ProfileActivateComponent implements OnInit {\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private userService: UserService\n  ) {\n  }\n\n  ngOnInit(): void {\n    let token = this.activatedRoute.snapshot.paramMap.get('token')\n    if (token) {\n      this.userService.activateUser(token).subscribe(\n        {\n          next:value => {\n            this.router.navigate(['user_is_activated']).then()\n          },\n          error:(err)=>{\n            this.router.navigate(['page404']).then()\n          }\n        }\n      )\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile-activated',\n  templateUrl: './profile-activated.component.html',\n  styleUrls: ['./profile-activated.component.sass']\n})\nexport class ProfileActivatedComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container \">\n  <div class=\"col-12 align-items-center justify-content-center\" style=\"margin-top: 10rem\">\n    <div class=\"row\">\n      <h2 style=\"text-align: center\">Your account is now active. Login to continue</h2>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport {AuthService} from \"../../../services/auth.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {FormControl, FormGroup} from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.scss']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n\r\n  isSuccessful: boolean = true\r\n  isSignUpFailed: boolean = false\r\n  errMsg: string = '';\r\n\r\n  registerForm: FormGroup = new FormGroup(\r\n    {\r\n      email: new FormControl('11d@gmail.com'),\r\n      login: new FormControl('abrams1'),\r\n      password: new FormControl('111111'),\r\n      profile: new FormGroup(\r\n        {\r\n          first_name: new FormControl('Serhiy'),\r\n          second_name: new FormControl('Terletskiy'),\r\n          last_name: new FormControl('andriy'),\r\n          age: new FormControl('18'),\r\n          birth_date: new FormControl('1977-06-12'),\r\n        }\r\n      ),\r\n    }\r\n  );\r\n\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSubmit() {\r\n    let user = this.registerForm.getRawValue()\r\n    this.authService.register(user).subscribe({\r\n        next: (value) => {\r\n          this.isSuccessful = true\r\n          this.isSignUpFailed = false\r\n          this.router.navigate(['login'])\r\n        },\r\n        error: (err) => {\r\n          if (err.error.email) {\r\n            this.errMsg = 'The email is already registered'\r\n          } else {\r\n            this.errMsg = JSON.stringify(err)\r\n          }\r\n          this.isSignUpFailed = true\r\n        }\r\n      }\r\n    )\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"col-md-12\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-4\">\r\n        <div class=\"border-2 d-flex align-items-center flex-column\" style=\"margin-top: 120px\">\r\n          <form class=\"w-75\" [formGroup]=\"registerForm\" *ngIf=\"isSuccessful\" (ngSubmit)=\"onSubmit()\" novalidate>\r\n            <div class=\"form-group  pb-2\">\r\n              <label for=\"email\">Email</label>\r\n              <input type=\"text\" id=\"email\" class=\"form-control\" required email formControlName=\"email\">\r\n              <label for=\"login\">Login</label>\r\n              <input type=\"text\" id=\"login\" class=\"form-control\" required formControlName=\"login\">\r\n              <label for=\"password\">Password</label>\r\n              <input type=\"text\" id=\"password\" class=\"form-control\" required formControlName=\"password\">\r\n              <div formGroupName=\"profile\">\r\n                <label for=\"age\">Age</label>\r\n                <input type=\"text\" id=\"age\" class=\"form-control\" required formControlName=\"age\">\r\n                <label for=\"first_name\">First name</label>\r\n                <input type=\"text\" id=\"first_name\" class=\"form-control\" required formControlName=\"first_name\">\r\n                <label for=\"second_name\">Second name</label>\r\n                <input type=\"text\" id=\"second_name\" class=\"form-control\" required formControlName=\"second_name\">\r\n                <label for=\"last_name\">Last name</label>\r\n                <input type=\"text\" id=\"last_name\" class=\"form-control\" required formControlName=\"last_name\">\r\n                <label for=\"birth_date\">Day of birth</label>\r\n                <input type=\"text\" id=\"birth_date\" class=\"form-control\" required formControlName=\"birth_date\">\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <button class=\"btn btn-primary btn-block\">Sign Up</button>\r\n            </div>\r\n          </form>\r\n          <div class=\"warning\" *ngIf=\"this.errMsg\">\r\n            {{this.errMsg}}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","export const regExList = {\r\n  ukrainian_phone_num: new RegExp(\"(\\\\+380\\\\s?d{2}\\\\s?d{3}\\\\s?d{4}$)\"),\r\n}\r\n","import {environment} from \"../environments/environment\"\r\n\r\nconst {URL} = environment;\r\n\r\nexport const user_urls = {\r\n  register: `${URL}/users/signup`,\r\n  login: `${URL}/login`,\r\n  refresh: `${URL}/token/refresh`\r\n}\r\n\r\nexport const boards_url = {\r\n  me: `${URL}/users/me`,\r\n  activate: `${URL}/activate`,\r\n  profile: `${URL}/users/profile`,\r\n  avatar: `${URL}/users/avatar`,\r\n  all_users: `${URL}/users/all`,\r\n  telegramKeyObject: `${URL}/telegram_connection`,\r\n}\r\n\r\nexport const PublicPlaceUrl = {\r\n  getMyPlaces: `${URL}/places/my_places`,\r\n  createPlace: `${URL}/places/create_place`,\r\n  deletePlace: `${URL}/places/delete_place`,\r\n}\r\n\r\n\r\nexport const ReviewPlaceUrl = {\r\n  getAllPlaceReviews: `${URL}/review/get_reviews`,\r\n  getAvgScorePlace: `${URL}/review/get_avg_place_score`,\r\n  sendReview: `${URL}/review/place_review`\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  URL:'/api'\r\n};\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {catchError} from \"rxjs\";\r\nimport {tap} from \"rxjs\";\r\nimport {Observable} from \"rxjs\";\r\nimport {BehaviorSubject} from \"rxjs\";\r\nimport {user_urls} from '../constants/url.constants'\r\nimport {IProfile, IUserModelInfo, IUserModelSignUp} from \"../models/IUser\";\r\nimport {ITokenPair} from \"../models/ITokenPair\";\r\n\r\n\r\nconst TOKEN_KEY = 'auth_token'\r\nconst REFRESH_KEY = 'refresh_token'\r\nconst USER_KEY = 'auth_user'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n\r\n  public UserIsLogged: BehaviorSubject<boolean> = new BehaviorSubject(false)\r\n  public UserInfo: BehaviorSubject<IUserModelInfo | {}> = new BehaviorSubject({})\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n  ) {\r\n  }\r\n\r\n  login(login: string, password: string): Observable<ITokenPair> {\r\n    return this.http.post<ITokenPair>(`${user_urls.login}`, {login: login, password: password})\r\n  }\r\n\r\n  register(user: IUserModelSignUp): Observable<IUserModelInfo> {\r\n    return this.http.post<IUserModelInfo>(`${user_urls.register}`, {...user})\r\n  }\r\n\r\n  refreshToken(token: string): Observable<ITokenPair> {\r\n\r\n    return this.http.post<ITokenPair>(`${user_urls.refresh}`, {\"refresh\": token}).pipe(\r\n      tap({\r\n        next: (token) => {\r\n          this.SaveTokens(token)\r\n        },\r\n        error: (err) => {\r\n          catchError(err)\r\n        }\r\n      }),\r\n    )\r\n  }\r\n\r\n  signOut() {\r\n    this.UserIsLogged.next(false)\r\n    this.UserInfo.next({})\r\n    window.sessionStorage.clear();\r\n  }\r\n\r\n  public SaveTokens(tokens: { access: string, refresh: string }) {\r\n    window.sessionStorage.setItem(TOKEN_KEY, tokens.access)\r\n    window.sessionStorage.setItem(REFRESH_KEY, tokens.refresh)\r\n  }\r\n\r\n  public getAccessToken(): string | null {\r\n    return window.sessionStorage.getItem(TOKEN_KEY)\r\n  }\r\n\r\n  public getRefreshToken(): string | null {\r\n    return window.sessionStorage.getItem(REFRESH_KEY)\r\n  }\r\n\r\n  public saveUser(user: IUserModelInfo): void {\r\n    this.UserInfo.next(user)\r\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user))\r\n  }\r\n\r\n  public updateUser(profile: IProfile): void {\r\n    const user = this.getUser()\r\n    if (user) {\r\n      user.profile = profile\r\n      this.saveUser(user)\r\n    }\r\n  }\r\n\r\n  public updateUserAvatar(avatar: string): void {\r\n    const user = this.getUser()\r\n    if (user) {\r\n      user.profile.avatar = avatar\r\n      console.log(avatar)\r\n      this.saveUser(user)\r\n    }\r\n  }\r\n\r\n  public getUser(): IUserModelInfo | void {\r\n    const user = window.sessionStorage.getItem(USER_KEY)\r\n    if (user) {\r\n      return JSON.parse(user)\r\n    }\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {CanActivate} from '@angular/router';\r\nimport {RouterStateSnapshot} from '@angular/router';\r\nimport {UrlTree} from '@angular/router';\r\nimport {ActivatedRouteSnapshot} from '@angular/router';\r\n\r\nimport {Observable} from 'rxjs';\r\nimport {AuthService} from \"../auth.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserGuard implements CanActivate {\r\n  constructor(private authService: AuthService) {\r\n  }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    return this.authService.UserIsLogged.value\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor, HTTP_INTERCEPTORS, HttpErrorResponse\r\n} from '@angular/common/http';\r\nimport {BehaviorSubject, catchError, filter, Observable, switchMap, take, throwError} from 'rxjs';\r\nimport {AuthService} from \"../auth.service\";\r\nimport {Router} from \"@angular/router\";\r\n\r\nconst TOKEN_HEADER_TYPE = 'Authorization'\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n  isRefreshing = false\r\n  private refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {\r\n  }\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    let authReq = request\r\n    const token = this.authService.getAccessToken();\r\n    if (token != null) {\r\n      authReq = this.AddTokenHeader(request, token)\r\n    }\r\n    return next.handle(authReq).pipe(catchError(error => {\r\n        if (\r\n          (\r\n            error instanceof HttpErrorResponse\r\n            && !(authReq.url.includes('signup') || authReq.url.includes('login'))\r\n            && error.status === 401\r\n          )\r\n        ) {\r\n          return this.handle401error(authReq, next)\r\n        }\r\n        return throwError(error)\r\n      })\r\n    ) as any\r\n  }\r\n\r\n  private AddTokenHeader(request: HttpRequest<unknown>, token: string) {\r\n    return request.clone({headers: request.headers.set(TOKEN_HEADER_TYPE, 'Bearer ' + token)})\r\n  }\r\n\r\n  handle401error(request: HttpRequest<any>, next: HttpHandler): any {\r\n    if (!this.isRefreshing) {\r\n      this.isRefreshing = true\r\n      const refresh = this.authService.getRefreshToken()\r\n      if (refresh) {\r\n        return this.authService.refreshToken(refresh).pipe(\r\n          switchMap((tokens) => {\r\n            return next.handle(this.AddTokenHeader(request, tokens.access))\r\n          }),\r\n          catchError((err) => {\r\n            this.isRefreshing = false\r\n            this.authService.signOut()\r\n            this.router.navigate(['login']).then()\r\n            return throwError(() => err)\r\n          })\r\n        )\r\n      }\r\n      catchError(error => {\r\n        return throwError(error)\r\n      })\r\n    }\r\n    catchError(error => {\r\n      return throwError(error)\r\n    })\r\n  }\r\n}\r\n\r\nexport const AuthServiceProvider = [\r\n  {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: AuthInterceptor,\r\n    multi: true,\r\n  }\r\n]\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {CreatePlace, PublicPlace} from \"../models/IPublic_place\";\r\nimport {PublicPlaceUrl} from \"../constants/url.constants\";\r\nimport {IResponse} from \"../models/IResponse\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PublicPlaceService {\r\n\r\n  constructor(\r\n    private httpClient: HttpClient\r\n  ) {\r\n  }\r\n\r\n  getMyPlaces(params:{}): Observable<IResponse<PublicPlace>> {\r\n    return this.httpClient.get<IResponse<PublicPlace>>(`${PublicPlaceUrl.getMyPlaces}`,{params:{...params}})\r\n  }\r\n\r\n  createPlace(data: CreatePlace): Observable<PublicPlace> {\r\n    return this.httpClient.post<PublicPlace>(`${PublicPlaceUrl.createPlace}`, {...data})\r\n  }\r\n\r\n  deletePlace(id:string):Observable<any>{\r\n    return this.httpClient.delete(`${PublicPlaceUrl.deletePlace}/${id}`, {})\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {ReviewPlace, SendReviewPlace} from \"../models/IReviewPlace\";\r\nimport {ReviewPlaceUrl} from \"../constants/url.constants\";\r\nimport {IResponse} from \"../models/IResponse\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReviewsService {\r\n\r\n  constructor(\r\n    private http:HttpClient,\r\n  ) { }\r\n\r\n  getReviews(id:string,params:{}):Observable<IResponse<ReviewPlace>>{\r\n    return this.http.get<IResponse<ReviewPlace>>(`${ReviewPlaceUrl.getAllPlaceReviews}/${id}`,{params:{...params}})\r\n  }\r\n  getAvgScoreReviews(id:string,params:{}):Observable<{data:{place_score__avg:string}}>{\r\n    return this.http.get<{data:{place_score__avg:string}}>(`${ReviewPlaceUrl.getAvgScorePlace}/${id}`,{params:{...params}})\r\n  }\r\n\r\n  postReview(id: string, value: SendReviewPlace):Observable<{detail:string}> {\r\n    return this.http.post<{detail:string}>(`${ReviewPlaceUrl.sendReview}/${id}`,{...value})\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {IProfile, IUserModelInfo} from \"../models/IUser\";\r\nimport {boards_url} from \"../constants/url.constants\";\r\nimport {IResponse} from \"../models/IResponse\";\r\nimport {ITelegramObject} from \"../models/ITelegramObject\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  constructor(\r\n    private http:HttpClient\r\n  ) { }\r\n\r\n  getUsers():Observable<IResponse<IUserModelInfo>>{\r\n    return this.http.get<IResponse<IUserModelInfo>>(`${boards_url.all_users}`,)\r\n  }\r\n  getMeUser():Observable<IResponse<IUserModelInfo>>{\r\n    return this.http.get<IResponse<IUserModelInfo>>(`${boards_url.me}`,)\r\n  }\r\n\r\n  getUserById(id:string):Observable<IResponse<IUserModelInfo>>{\r\n    return this.http.get<IResponse<IUserModelInfo>>(`${boards_url.all_users}/id`,)\r\n  }\r\n\r\n  updateUserProfileByID(profileInfo:Partial<IProfile>):Observable<IProfile>{\r\n    return this.http.patch<IProfile>(`${boards_url.profile}`, {...profileInfo}, {})\r\n  }\r\n\r\n  addAvatarToUser(formData:FormData):Observable<{ avatar: string }>{\r\n    return this.http.patch<{avatar:string}>(`${boards_url.avatar}`,formData)\r\n  }\r\n\r\n  getUserTelegramKeyObject():Observable<IResponse<ITelegramObject>>{\r\n    return this.http.get<IResponse<ITelegramObject>>(`${boards_url.telegramKeyObject}`)\r\n  }\r\n\r\n  activateUser(token:string):Observable<{ detail: string }>{\r\n    return this.http.get<{detail:string}>(`${boards_url.activate}/${token}`, )\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}