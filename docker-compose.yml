version: "3.8"

services:
  app:
    build:
      context: .
    depends_on:
      - celery
      - db
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    env_file:
      - .env
    restart: on-failure
    command: >
      sh -c "
      python manage.py a_db_connection &&
      python manage.py telegram_bot &&
      python manage.py runserver 0.0.0.0:8000"

  db:
    image: mysql:8.0
    ports:
      - "3308:3306"
    env_file:
      - .env
    volumes:
      - ./mysql_db:/var/lib/mysql
    restart: on-failure
  web:
    image: nginx:alpine
    depends_on:
      - app
    ports:
      - "80:80"
    restart: always
    volumes:
      - ./client:/usr/share/nginx/html/frontend
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
  redis:
    image: redis
    restart: on-failure

  celery:
    build:
      context: .
    depends_on:
      - redis
    volumes:
      - ./backend:/app
    env_file:
      - .env
    restart: on-failure
    command: >
      sh -c "celery -A configs worker -l info"